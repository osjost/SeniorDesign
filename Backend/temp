 private final ActivityResultLauncher<String> requestPermissionLauncher =
            registerForActivityResult(new ActivityResultContracts.RequestPermission(), isGranted -> {
                if (isGranted) {
                    // FCM SDK (and your app) can post notifications.
                } else {
                    // TODO: Inform user that that your app will not show notifications.
                }
            });

    private void askNotificationPermission() {
        // This is only necessary for API level >= 33 (TIRAMISU)
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {
            if (ContextCompat.checkSelfPermission(this, Manifest.permission.POST_NOTIFICATIONS) ==
                    PackageManager.PERMISSION_GRANTED) {
                // FCM SDK (and your app) can post notifications.
            } else if (shouldShowRequestPermissionRationale(Manifest.permission.POST_NOTIFICATIONS)) {
                // TODO: display an educational UI explaining to the user the features that will be enabled
                //       by them granting the POST_NOTIFICATION permission. This UI should provide the user
                //       "OK" and "No thanks" buttons. If the user selects "OK," directly request the permission.
                //       If the user selects "No thanks," allow the user to continue without notifications.
            } else {
                // Directly ask for the permission
                requestPermissionLauncher.launch(Manifest.permission.POST_NOTIFICATIONS);
            }
        }
    }



    @Override
    //    protected void onResume() {
    //        super.onResume();
    //        Log.w("messaging", "here");
            // Your condition to ensure you don't ask for permission unnecessarily
    //        if (true) {
    //            askNotificationPermission();
    //        }
    
    
    //        this actually gets the users token, assuming that they enter yes. we have to add more UI elements to account for this:
    //        FirebaseMessaging.getInstance().getToken()
    //                .addOnCompleteListener(new OnCompleteListener<String>() {
    //                    @Override
    //                    public void onComplete(@NonNull Task<String> task) {
    //                        if (!task.isSuccessful()) {
    //                            Log.w("messaging", "Fetching FCM registration token failed", task.getException());
    //                            return;
    //                        }
    //
    //                        // Get new FCM registration token
    //                        String token = task.getResult();
    //
    //                        // Log and toast
    //                        Log.d("messaging", token);
    //                        // Send the token to your server to keep it updated
    //                    }
    //                });
    //    }








    import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
import android.util.Log;
import androidx.activity.result.ActivityResultLauncher;
import androidx.activity.result.contract.ActivityResultContracts;
import androidx.core.content.ContextCompat;
import android.Manifest;
import android.content.pm.PackageManager;
import android.os.Build;

//Import API stuff
import org.json.JSONObject;
import org.json.JSONException;

import java.text.SimpleDateFormat;
import java.util.Date;

import api.*;






    // Import the Firebase BoM
    implementation(platform("com.google.firebase:firebase-bom:32.7.1"))

    // When using the BoM, you don't specify versions in Firebase library dependencies

    // Add the dependency for the Firebase SDK for Google Analytics
    implementation("com.google.firebase:firebase-analytics")

    // TODO: Add the dependencies for any other Firebase products you want to use
    // See https://firebase.google.com/docs/android/setup#available-libraries
    // For example, add the dependencies for Firebase Authentication and Cloud Firestore
    implementation("com.google.firebase:firebase-auth")
    implementation("com.google.firebase:firebase-firestore")
    implementation("com.google.firebase:firebase-messaging")

//    val activityVersion = "1.8.2"
//    implementation("androidx.activity:activity:$activityVersion")
//
//    val fragmentVersion = "1.6.2"
//    implementation("androidx.fragment:fragment:$fragmentVersion")\

    // AndroidX Activity KTX for ActivityResultLauncher
    implementation("androidx.activity:activity-ktx:1.4.0")

    // AndroidX Fragment KTX for Fragment use
    implementation("androidx.fragment:fragment-ktx:1.4.0")








// for build.gradle.kts
    id("com.google.gms.google-services") version "4.4.0" apply false








